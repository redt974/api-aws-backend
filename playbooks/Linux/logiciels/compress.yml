### Télécharger et installer des logiciels spécifiques (Android Studio, Postman, IntelliJ IDEA) ###
- name: Télécharger et installer des logiciels spécifiques (Android Studio, Postman, IntelliJ IDEA)
  block:
    # Étape 1 : Créer le fichier custom_software_paths.sh uniquement si nécessaire
    - name: Créer le fichier custom_software_paths.sh uniquement si nécessaire
      ansible.builtin.stat:
        path: /etc/profile.d/custom_software_paths.sh
      register: file_check

    - name: Créer le fichier custom_software_paths.sh
      ansible.builtin.file:
        path: /etc/profile.d/custom_software_paths.sh
        state: touch
        mode: "0755"
      when: file_check.stat.exists == false

    # Étape 2 : Créer des dossiers pour les logiciels
    - name: Créer des dossiers pour les logiciels
      ansible.builtin.file:
        path: /opt/{{ item.name }}
        state: directory
        mode: "0755"
      loop:
        - { name: "android-studio" }
        - { name: "postman" }
        - { name: "idea" }
      when: item.name in software_list

    # Étape 3 : Télécharger les fichiers des logiciels
    - name: Télécharger les fichiers .tar.gz des logiciels
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/opt/{{ item.name }}/{{ item.name }}.tar.gz"
      loop:
        - {
            name: "android-studio",
            url: "https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.2.1.11/android-studio-2024.2.1.11-linux.tar.gz",
          }
        - {
            name: "postman",
            url: "https://dl.pstmn.io/download/latest/linux64",
          }
        - {
            name: "idea",
            url: "https://download.jetbrains.com/idea/ideaIC-2023.3.1.tar.gz",
          }
      when: item.name in software_list

    # Étape 4 : Installer les outils nécessaires
    - name: Installer les outils nécessaires
      ansible.builtin.package:
        name: tar
        state: present

    # Étape 5 : Décompresser les fichiers
    - name: Décompresser les fichiers .tar.gz
      ansible.builtin.unarchive:
        src: "/opt/{{ item.name }}/{{ item.name }}.tar.gz"
        dest: "/opt/{{ item.name }}"
        remote_src: yes
      loop:
        - { name: "android-studio" }
        - { name: "postman" }
        - { name: "idea" }
      when: item.name in software_list

    # Étape 6 : Ajouter les alias dans un fichier global
    - name: Ajouter les alias dans le fichier .bashrc de l'utilisateur
      ansible.builtin.lineinfile:
        path: /home/{{ ansible_user }}/.bashrc
        line: "alias {{ item.name }}='{{ item.executable_path }}'"
        state: present
      loop:
        - {
            name: "android-studio",
            executable_path: "/opt/android-studio/android-studio/bin/studio.sh",
          }
        - { name: "postman", executable_path: "/opt/postman/Postman/Postman" }
        - {
            name: "idea",
            executable_path: "/opt/idea/idea-IC-233.11799.300/bin/idea.sh",
          }
      when: item.name in software_list

    # Étape 7 : Recharger .bashrc pour les sessions actuelles
    - name: Recharger .bashrc pour les sessions actuelles
      ansible.builtin.shell: source /home/{{ ansible_user }}/.bashrc
      args:
        executable: /bin/bash